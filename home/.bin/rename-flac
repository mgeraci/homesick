#!/usr/bin/env node

const execSync = require('child_process').execSync;
const existsSync = require('fs').existsSync;
const readdirSync = require('fs').readdirSync;
const statSync = require('fs').statSync;
const readline = require('readline');
const path = require('path');


// constants
// ----------------------------------------------------------------------------

const tags = {
  artist: 'ARTIST',
  year: 'DATE',
  album: 'ALBUM',
  trackNumber: 'TRACKNUMBER',
  title: 'TITLE',
};

const validAnswers = new Set([
  'y',
  'yes',
  'Yes',
  'YES',
  'sure',
  'Sure',
  'SURE',
  'ok',
  'Ok',
  'OK',
]);


// helpers
// ----------------------------------------------------------------------------

const checkForMetaflac = () => {
  try {
    execSync("which metaflac");
  }
  catch(err) {
    console.log("This script requires the `metaflac` package; install it with `brew install flac`.");
    process.exit(1);
  }
};

const checkForImagemagick = () => {
  try {
    execSync("which magick");
  }
  catch(err) {
    console.log("This script requires the `magick` package; install it with `brew install imagemagick`.");
    process.exit(1);
  }
};

const getTargetFolder = () => {
  const userDir = process.argv[2];

  if (!userDir) {
    console.error('You must pass a directory as the first argument.');
    process.exit(1);
  }

  const dir = userDir.indexOf("/") === 0
    ? userDir
    : `${process.cwd()}/${userDir}`;

  console.log(`Looking for flac files in ${dir}/`);

  if (!existsSync(dir)) {
    console.error('Error: that directory does not exist.');
    process.exit(1);
  }

  return dir;
};

const escapeFilename = (filename) => {
  return filename
    .replace(/ /g, "\\ ")
    .replace(/'/g, "\\'")
    .replace(/&/g, "\\&")
    .replace(/;/g, "\\;")
    .replace(/\./g, "\\.")
    .replace(/\$/g, "\\$")
    .replace(/\(/g, "\\(")
    .replace(/\)/g, "\\)")
    .replace(/\|/g, "\\|");
};

const getFilenameFromFlac = (inputFile) => {
  const res = {};

  Object.keys(tags).forEach((key) => {
    const tagName = tags[key];
    const tag = execSync(`metaflac --show-tag=${tagName} ${inputFile}`)
      .toString()
      .trim()
      .replace(/^.+=/, '') // remove the tag format,  ARTIST=Deerhoof
      .replace(/\//g, '-'); // remove invalid filename characters

    res[key] = tag;
  });

  return `${res.artist} - ${res.year} - ${res.album} - ${res.trackNumber} - ${res.title}.flac`;
};

const renameFiles = (dir, files) => {
  console.log('Renaming files...');

  files.forEach((fileTuple) => {
    const cmd = [
      'mv',
      escapeFilename(`${dir}/${fileTuple[0]}`),
      escapeFilename(`${dir}/${fileTuple[1]}`),
    ].join(' ');

    execSync(cmd);
  });

  console.log('Done!');
  process.exit(0);
};

const setArtwork = (dir) => {
  console.log('Setting artwork...');

  const file = escapeFilename(`${dir}/*.flac`);
  const escapedDir = escapeFilename(dir);

  execSync(`magick ${escapedDir}/folder.jpg -resize 1024x1024\\\> ${escapedDir}/folder.tmp.jpg`);

  const stats = statSync(`${dir}/folder.tmp.jpg`);
  const sizeInKb = Math.round(stats.size / 1024);

  if (sizeInKb > 320) {
    execSync(`magick convert ${escapedDir}/folder.tmp.jpg -define jpeg:extent=320kb ${escapedDir}/folder.tmp.jpg`);
  }

  execSync(`metaflac --preserve-modtime --import-picture-from=${escapedDir}/folder.tmp.jpg ${file}`);
  execSync(`rm ${escapedDir}/folder.tmp.jpg`);
};

const removeAlbumArtist = (dir) => {
  console.log('Removing album artist...');

  const file = escapeFilename(`${dir}/*.flac`);
  execSync(`metaflac --preserve-modtime --remove-tag=ALBUMARTIST ${file}`);
};

const renameAlbumArt = (dir) => {
  const art = readdirSync(dir).find((file) => file.startsWith('cover'));

  if (!art) {
    return;
  }

  console.log('Renaming album art...');
  const source = escapeFilename(path.join(dir, art));
  const target = escapeFilename(path.join(dir, art.replace('cover', 'folder')));
  execSync(`mv ${source} ${target}`);
};


// script
// ----------------------------------------------------------------------------

checkForMetaflac();
checkForImagemagick();

const renameStorage = [];
const dir = getTargetFolder();
const files = readdirSync(dir)
  .filter((file) => file.indexOf('.flac') > 0);

if (!files || !files.length) {
  console.error("No flac files found!");
  process.exit(1);
}

files.forEach((file) => {
  const newName = getFilenameFromFlac(escapeFilename(`${dir}/${file}`));
  renameStorage.push([file, newName])
});

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

console.log("\nHere are the proposed file names:");
console.log(renameStorage.map((item) => item[1]));

rl.question("\nWould you like to rename them? This will also remove any embedded artwork and album artist tags. [y/n] ", (answer) => {
  if (validAnswers.has(answer)) {
    renameAlbumArt(dir);
    setArtwork(dir);
    removeAlbumArtist(dir);
    renameFiles(dir, renameStorage);
  } else {
    console.log("No action taken.");
  }

  rl.close();
  process.exit(0);
});
